name: "Terraform"

on:
  workflow_call:
    inputs:
      terraform_version:
        required: true
        type: string
      terraform_api:
        required: true
        type: string
      github_username:
        required: true
        type: string
      github_email:
        required: true
        type: string
      github_org:
        required: true
        type: string
    secrets:
      TFE_TOKEN:
        required: true
      GH_TOKEN:
        required: true
env:
  GITHUB_OWNER: ${{ inputs.github_org }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  
jobs:
  terraform:
    name: "Terraform FMT and Validation"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          persist-credentials: false
          
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: ${{ inputs.terraform_version }}
          cli_config_credentials_token: ${{ secrets.TFE_TOKEN }}
          cli_config_credentials_hostname: ${{ inputs.terraform_api }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt

      - name: Terraform Init
        id: init
        run: terraform init || echo 1 | terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Test
        id: test
        run: terraform test

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Test ü§ñ\`${{ steps.test.outcome }}\`
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          message: Terraform AutoFormat
          author_email: ${{ inputs.github_email }}
          author_name: ${{ inputs.github_username }}
          branch: ${{ github.head_ref }}
          # rebase: true
          # force: true
          
      - name: Terraform Test Status
        if: steps.test.outcome == 'failure'
        run: exit 1
        
      - name: Terraform Init Status
        if: steps.init.outcome == 'failure'
        run: exit 1

      - name: Terraform FMT Status
        if: steps.fmt.outcome == 'failure'
        run: exit 1

      - name: Terraform Validate Status
        if: steps.validate.outcome == 'failure'
        run: exit 1
