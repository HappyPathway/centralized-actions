name: "Gtag"

on:
  workflow_call:
    inputs:
      minor:
        required: false
        type: boolean
        default: false
      major:
        required: false
        type: boolean
        default: false
      patch:  
        required: false
        type: boolean
        default: false
      github_org:
        required: true
        type: string
      github_username:
        required: true
        type: string
      github_email:
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true
env:
  GITHUB_OWNER: ${{ inputs.github_org }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  
jobs:
  gtag:
    name: "GTag"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
     
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          persist-credentials: false
          
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      
      - name: Download GTag
        run: |
          curl -sSL https://raw.githubusercontent.com/HappyPathway/centralized-actions/main/.github/workflows/gtag.py -o gtag.py
          curl -sSL https://raw.githubusercontent.com/HappyPathway/centralized-actions/main/.github/workflows/requirements.txt -o requirements.txt
            
      - name: setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
          cache: pip
      
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      
      - name: git fetch --unshallow --tags
        run: git fetch --unshallow --tags

      - name: get tags
        run: git tag --list

      - name: GTag (Minor)
        if: ${{ inputs.minor == true }}
        run: |
          echo "next_tag=$(python gtag.py --minor)" >> $GITHUB_ENV 

      - name: GTag (Major)
        if: ${{ inputs.major == true }}
        run: |
          echo "next_tag=$(python gtag.py --major)" >> $GITHUB_ENV 

      - name: GTag (Patch)
        if: ${{ inputs.patch == true }}
        run: |
          echo "next_tag=$(python gtag.py --patch)" >> $GITHUB_ENV 
      
      - name: set tag
        run: |
          git config --global user.email "${{inputs.github_email}}"
          git config --global user.name "${{inputs.github_username}}"
          git tag -a ${{ env.next_tag }} -m "Release ${{ env.next_tag }}"
          git push --tags